{"version":3,"sources":["bundler/index.ts","hooks/use-typed-selector.ts","state/actions/action-types.ts","state/reducers/cellsReducer.ts","state/reducers/bundlesReducer.ts","state/reducers/index.ts","bundler/plugins/fetch-plugin.ts","bundler/plugins/unpkg-path-plugin.ts","state/actions/index.ts","state/store.ts","state/middleware/persist-middleware.ts","hooks/use-actions.ts","components/action-bar.tsx","components/code-editor.tsx","components/preview.tsx","components/resizable.tsx","components/code-cell.tsx","hooks/use-cumulative-code.ts","components/text-editor.tsx","components/cell-list-item.tsx","components/add-cell.tsx","components/cell-list.tsx","index.tsx","../node_modules/flow-parser sync"],"names":["service","useTypedSelector","useSelector","ActionType","initialState","loading","error","focusedIndex","order","data","randomId","Math","random","toString","substr","reducer","state","arguments","length","undefined","action","type","SAVE_CELLS_ERROR","_objectSpread","payload","FETCH_CELLS","FETCH_CELLS_COMPLETE","map","cell","id","reduce","acc","FETCH_CELLS_ERROR","MOVE_CELL","_action$payload","direction","foundIndex","findIndex","cellId","targetIndex","slice","DELETE_CELL","_state$data","_objectWithoutProperties","_toPropertyKey","filter","INSERT_CELL_AFTER","_action$payload2","content","concat","_toConsumableArray","_defineProperty","UPDATE_CELL","_action$payload3","BUNDLE_START","code","BUNDLE_COMPLETE","bundle","reducers","combineReducers","cells","cellsReducer","bundles","bundlesReducer","fileCache","localForage","createInstance","name","fetchPlugin","inputCode","setup","build","onLoad","loader","contents","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","args","cachedResult","wrap","_context","prev","next","getItem","path","sent","abrupt","stop","_x","apply","_ref2","_callee2","_yield$axios$get","request","escaped","result","_context2","axios","get","replace","resolveDir","URL","responseURL","pathname","setItem","_x2","_ref3","_callee3","_yield$axios$get2","_context3","_x3","rawCode","esbuild","worker","wasmURL","entryPoints","write","plugins","onResolve","namespace","href","define","global","jsxFactory","jsxFragment","outputFiles","text","t0","Error","message","moveCell","deleteCell","insertCellAfter","updateCell","createBundle","cellContent","dispatch","fetchCells","saveCells","getState","_getState$cells","post","_x4","store","createStore","applyMiddleware","timer","includes","clearTimeout","setTimeout","thunk","fetch","headers","then","res","json","demo","reverse","forEach","useActions","useDispatch","useMemo","bindActionCreators","actions","ActionButton","icon","_jsx","className","onClick","children","ActionBar","_useActions","_jsxs","CodeEditor","initialValue","onChange","onExecuteBundle","editorRef","useRef","unformatted","current","getModel","getValue","formatted","prettier","format","parser","useTabs","semi","singleQuote","setValue","MonacoEditor","editorDidMount","monacoEditor","_monacoEditor$getMode","onDidChangeModelContent","updateOptions","tabSize","Highlighter","window","monaco","codeShift","highLightOnDidChangeModelContent","value","language","height","options","wordWrap","minimap","enabled","showUnused","folding","lineNumbersMinChars","fontSize","scrollBeyondLastLine","automaticLayout","html","Preview","iframeRef","useEffect","srcdoc","contentWindow","postMessage","title","ref","sandbox","srcDoc","Resizable","props","_useState","useState","innerHeight","_useState2","_slicedToArray","setInnerHeight","_useState3","innerWidth","_useState4","setInnerWidth","_useState5","_useState6","width","setWidth","listener","addEventListener","removeEventListener","minConstraints","Infinity","maxConstraints","resizeHandles","onResizeStop","event","size","ResizableBox","CodeCell","cumulativeCode","_step","_state$cells","_iterator","_createForOfIteratorHelper","s","n","done","c","push","err","e","f","join","style","display","flexDirection","max","TextEditor","editing","setEditing","target","contains","capture","_Fragment","MDEditor","Markdown","source","CellListItem","child","focused","AddButton","label","AddCell","forceVisible","previousCellId","CellList","_useTypedSelector","_document$querySelect","document","querySelector","scrollIntoView","behavior","block","filename","renderedCells","Fragment","el","getElementById","App","Provider","createRoot","render","webpackEmptyContext","req","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.90813a8b.chunk.js","sourcesContent":["import * as esbuild from 'esbuild-wasm';\nimport { unpkgPathPlugin } from './plugins/unpkg-path-plugin';\nimport { fetchPlugin } from './plugins/fetch-plugin';\n\nlet service: esbuild.Service;\nconst bundle = async (rawCode: string) => {\n  if (!service) {\n    service = await esbuild.startService({\n      worker: true,\n      wasmURL: 'https://unpkg.com/esbuild-wasm@0.8.27/esbuild.wasm',\n    });\n  }\n\n  try {\n    const result = await service.build({\n      entryPoints: ['index.js'],\n      bundle: true,\n      write: false,\n      plugins: [unpkgPathPlugin(), fetchPlugin(rawCode)],\n      define: {\n        'process.env.NODE_ENV': '\"production\"',\n        global: 'window',\n      },\n      jsxFactory: '_React.createElement',\n      jsxFragment: '_React.Fragment',\n    });\n\n    return {\n      code: result.outputFiles[0].text,\n      error: '',\n    };\n  } catch (err) {\n    if (err instanceof Error) {\n      return {\n        code: '',\n        error: err.message,\n      };\n    } else {\n      throw err;\n    }\n  }\n};\n\nexport default bundle;\n","import { useSelector, TypedUseSelectorHook } from 'react-redux';\nimport { RootState } from '../state';\n\nexport const useTypedSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import { Cell, CellType } from '../cell';\n\nexport enum ActionType {\n  MOVE_CELL = 'move_cell',\n  DELETE_CELL = 'delete_cell',\n  INSERT_CELL_AFTER = 'insert_cell_after',\n  UPDATE_CELL = 'update_cell',\n  BUNDLE_START = 'bundle_start',\n  BUNDLE_COMPLETE = 'bundle_complete',\n  FETCH_CELLS = 'fetch_cells',\n  FETCH_CELLS_COMPLETE = 'fetch_cells_complete',\n  FETCH_CELLS_ERROR = 'fetch_cells_error',\n  SAVE_CELLS = 'save_cells',\n  SAVE_CELLS_ERROR = 'save_cells_error',\n}\n\nexport type Direction = 'up' | 'down';\n\nexport interface MoveCellAction {\n  type: ActionType.MOVE_CELL;\n  payload: {\n    id: string;\n    direction: Direction;\n  };\n}\n\nexport interface DeleteCellAction {\n  type: ActionType.DELETE_CELL;\n  payload: string;\n}\n\nexport interface InsertCellAfterAction {\n  type: ActionType.INSERT_CELL_AFTER;\n  payload: {\n    id: string | null;\n    type: CellType;\n    content?: string;\n  };\n}\n\nexport interface UpdateCellAction {\n  type: ActionType.UPDATE_CELL;\n  payload: {\n    id: string;\n    content: string;\n  };\n}\n\nexport interface BundleStartAction {\n  type: ActionType.BUNDLE_START;\n  payload: {\n    cellId: string;\n  };\n}\n\nexport interface BundleCompleteAction {\n  type: ActionType.BUNDLE_COMPLETE;\n  payload: {\n    cellId: string;\n    bundle: {\n      code: string;\n      error: string;\n    };\n  };\n}\n\nexport interface FetchCellsAction {\n  type: ActionType.FETCH_CELLS;\n}\n\nexport interface FetchCellsCompleteAction {\n  type: ActionType.FETCH_CELLS_COMPLETE;\n  payload: Cell[];\n}\n\nexport interface FetchCellsErrorAction {\n  type: ActionType.FETCH_CELLS_ERROR;\n  payload: string;\n}\n\nexport interface SaveCellsAction {\n  type: ActionType.SAVE_CELLS;\n}\n\nexport interface SaveCellsErrorAction {\n  type: ActionType.SAVE_CELLS_ERROR;\n  payload: string;\n}\n\nexport type Action =\n  | MoveCellAction\n  | DeleteCellAction\n  | InsertCellAfterAction\n  | UpdateCellAction\n  | BundleStartAction\n  | BundleCompleteAction\n  | FetchCellsAction\n  | FetchCellsCompleteAction\n  | FetchCellsErrorAction\n  // | SaveCellsAction\n  | SaveCellsErrorAction;\n","import { ActionType, Action } from '../actions/action-types';\nimport { Cell } from '../cell';\n\ninterface CellsState {\n  loading: boolean;\n  error: string | null;\n  order: string[];\n  focusedIndex: string | null;\n  data: {\n    [key: string]: Cell;\n  };\n}\n\nconst initialState: CellsState = {\n  loading: false,\n  error: null,\n  focusedIndex: null,\n  order: [],\n  data: {},\n};\n\nconst reducer = (state: CellsState = initialState, action: Action) => {\n  switch (action.type) {\n    case ActionType.SAVE_CELLS_ERROR: {\n      return {\n        ...state,\n        error: action.payload,\n      };\n    }\n    case ActionType.FETCH_CELLS: {\n      return {\n        ...state,\n        loading: true,\n        error: null,\n      };\n    }\n    case ActionType.FETCH_CELLS_COMPLETE: {\n      const order = action.payload.map((cell) => cell.id);\n      const data = action.payload.reduce((acc, cell) => {\n        acc[cell.id] = cell;\n        return acc;\n      }, {} as CellsState['data']);\n      return {\n        ...state,\n        loading: false,\n        error: null,\n        order,\n        data,\n      };\n    }\n    case ActionType.FETCH_CELLS_ERROR: {\n      return {\n        ...state,\n        loading: false,\n        error: action.payload,\n      };\n    }\n    case ActionType.MOVE_CELL: {\n      const { id, direction } = action.payload;\n      const foundIndex = state.order.findIndex((cellId) => cellId === id);\n      const targetIndex = direction === 'up' ? foundIndex - 1 : foundIndex + 1;\n\n      if (targetIndex < 0 || targetIndex > state.order.length - 1) {\n        return state;\n      }\n\n      const order = state.order.slice();\n      order[foundIndex] = order[targetIndex];\n      order[targetIndex] = id;\n\n      return {\n        ...state,\n        focusedIndex: id,\n        order,\n      };\n    }\n    case ActionType.DELETE_CELL: {\n      const id = action.payload;\n      const { [id]: omit, ...data } = state.data;\n      const order = state.order.filter((cellId) => cellId !== id);\n\n      return {\n        ...state,\n        focusedIndex: null,\n        data,\n        order,\n      };\n    }\n    case ActionType.INSERT_CELL_AFTER: {\n      const { id, type, content } = action.payload;\n\n      const cell: Cell = {\n        id: randomId(),\n        type,\n        content: content ? content : '',\n      };\n\n      const foundIndex = state.order.findIndex((cellId) => cellId === id);\n      const targetIndex = foundIndex + 1;\n\n      let order: string[];\n      if (foundIndex < 0) {\n        order = [cell.id, ...state.order];\n      } else {\n        order = [\n          ...state.order.slice(0, targetIndex),\n          cell.id,\n          ...state.order.slice(targetIndex),\n        ];\n      }\n\n      return {\n        ...state,\n        focusedIndex: cell.id,\n        data: {\n          ...state.data,\n          [cell.id]: cell,\n        },\n        order,\n      };\n    }\n    case ActionType.UPDATE_CELL: {\n      const { id, content } = action.payload;\n\n      return {\n        ...state,\n        focusedIndex: null,\n        data: {\n          ...state.data,\n          [id]: {\n            ...state.data[id],\n            content,\n          },\n        },\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst randomId = () => {\n  return Math.random().toString(36).substr(2, 5);\n};\n\nexport default reducer;\n","import { ActionType, Action } from '../actions/action-types';\n\ninterface BundlesState {\n  [key: string]:\n    | {\n        loading: boolean;\n        code: string;\n        error: string;\n      }\n    | undefined;\n}\n\nconst initialState: BundlesState = {};\n\nconst reducer = (\n  state: BundlesState = initialState,\n  action: Action\n): BundlesState => {\n  switch (action.type) {\n    case ActionType.BUNDLE_START: {\n      const { cellId } = action.payload;\n      return {\n        ...state,\n        [cellId]: {\n          loading: true,\n          code: '',\n          error: '',\n        },\n      };\n    }\n    case ActionType.BUNDLE_COMPLETE: {\n      const { cellId, bundle } = action.payload;\n      return {\n        ...state,\n        [cellId]: {\n          loading: false,\n          code: bundle.code,\n          error: bundle.error,\n        },\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nexport default reducer;\n","import { combineReducers } from 'redux';\n\nimport cellsReducer from './cellsReducer';\nimport bundlesReducer from './bundlesReducer';\n\nconst reducers = combineReducers({\n  cells: cellsReducer,\n  bundles: bundlesReducer,\n});\n\nexport default reducers;\n\nexport type RootState = ReturnType<typeof reducers>;\n","import * as esbuild from 'esbuild-wasm';\nimport axios from 'axios';\nimport localForage from 'localforage';\n\nconst fileCache = localForage.createInstance({\n  name: 'filecache',\n});\n\nexport const fetchPlugin = (inputCode: string) => {\n  return {\n    name: 'fetch-plugin',\n    setup(build: esbuild.PluginBuild) {\n      // Handle root entry file of 'index.js'\n      build.onLoad({ filter: /(^index\\.js$)/ }, () => {\n        return {\n          loader: 'jsx',\n          contents: inputCode,\n        };\n      });\n\n      // apply to all, if no object is returned, will fall thru\n      build.onLoad({ filter: /.*/ }, async (args: any) => {\n        // Check to see if we have already fetched this file\n        // and if it is in the cache\n        const cachedResult = await fileCache.getItem<esbuild.OnLoadResult>(\n          args.path\n        );\n\n        // if it is, return it immediately\n        if (cachedResult) {\n          return cachedResult;\n        }\n      });\n\n      // css loader\n      build.onLoad({ filter: /.css$/ }, async (args: any) => {\n        const { data, request } = await axios.get(args.path);\n\n        const escaped = data\n          .replace(/\\n/g, '')\n          .replace(/\"/g, '\\\\\"')\n          .replace(/'/g, \"\\\\'\");\n        const contents = `\n          const style = document.createElement('style');\n          style.innerText = '${escaped}';\n          document.head.appendChild(style);\n        `;\n\n        const result: esbuild.OnLoadResult = {\n          loader: 'jsx',\n          contents,\n          resolveDir: new URL('./', request.responseURL).pathname,\n        };\n\n        await fileCache.setItem(args.path, result);\n\n        return result;\n      });\n\n      // other loader\n      build.onLoad({ filter: /.*$/ }, async (args: any) => {\n        const { data, request } = await axios.get(args.path);\n\n        const result: esbuild.OnLoadResult = {\n          // loader: fileType,\n          loader: 'jsx',\n          contents: data,\n          resolveDir: new URL('./', request.responseURL).pathname,\n        };\n\n        await fileCache.setItem(args.path, result);\n\n        return result;\n      });\n    },\n  };\n};\n","import * as esbuild from 'esbuild-wasm';\n\nexport const unpkgPathPlugin = () => {\n  return {\n    name: 'unpkg-path-plugin',\n    setup(build: esbuild.PluginBuild) {\n      // Handle root entry file of 'index.js'\n      build.onResolve({ filter: /(^index\\.js$)/ }, () => {\n        return { path: 'index.js', namespace: 'a' };\n      });\n\n      // Handle relative paths in a module\n      build.onResolve({ filter: /^\\.+\\// }, (args: any) => {\n        return {\n          namespace: 'a',\n          path: new URL(args.path, 'https://unpkg.com' + args.resolveDir + '/')\n            .href,\n        };\n      });\n\n      // Handle main file of a module\n      build.onResolve({ filter: /.*/ }, async (args: any) => {\n        return {\n          namespace: 'a',\n          path: `https://unpkg.com/${args.path}`,\n        };\n      });\n    },\n  };\n};\n","import axios from 'axios';\nimport { Dispatch } from 'redux';\nimport {\n  MoveCellAction,\n  DeleteCellAction,\n  InsertCellAfterAction,\n  UpdateCellAction,\n  Direction,\n  Action,\n  ActionType,\n} from './action-types';\nimport { Cell, CellType } from '../cell';\nimport bundle from '../../bundler';\nimport { RootState } from '../reducers';\n\nexport const moveCell = (id: string, direction: Direction): MoveCellAction => {\n  return {\n    type: ActionType.MOVE_CELL,\n    payload: {\n      id,\n      direction,\n    },\n  };\n};\n\nexport const deleteCell = (id: string): DeleteCellAction => {\n  return {\n    type: ActionType.DELETE_CELL,\n    payload: id,\n  };\n};\n\nexport const insertCellAfter = (\n  id: string | null,\n  type: CellType,\n  content?: string\n): InsertCellAfterAction => {\n  return {\n    type: ActionType.INSERT_CELL_AFTER,\n    payload: {\n      id,\n      type,\n      content,\n    },\n  };\n};\n\nexport const updateCell = (id: string, content: string): UpdateCellAction => {\n  return {\n    type: ActionType.UPDATE_CELL,\n    payload: {\n      id,\n      content,\n    },\n  };\n};\n\nexport const createBundle = (cellId: string, cellContent: string) => {\n  return async (dispatch: Dispatch<Action>) => {\n    dispatch({\n      type: ActionType.BUNDLE_START,\n      payload: {\n        cellId,\n      },\n    });\n\n    const result = await bundle(cellContent);\n    dispatch({\n      type: ActionType.BUNDLE_COMPLETE,\n      payload: {\n        cellId,\n        bundle: result,\n      },\n    });\n  };\n};\n\n// because action involves network request, we use redux thunk\n// we need to return an inner function\n// the inner function is going to be called with dispatch function\n// so, mark it as async\nexport const fetchCells = () => {\n  return async (dispatch: Dispatch<Action>) => {\n    dispatch({ type: ActionType.FETCH_CELLS });\n\n    try {\n      const { data }: { data: Cell[] } = await axios.get('/cells');\n      dispatch({\n        type: ActionType.FETCH_CELLS_COMPLETE,\n        payload: data,\n      });\n    } catch (err) {\n      if (err instanceof Error) {\n        dispatch({\n          type: ActionType.FETCH_CELLS_ERROR,\n          payload: err.message,\n        });\n      }\n    }\n  };\n};\n\nexport const saveCells = () => {\n  return async (dispatch: Dispatch<Action>, getState: () => RootState) => {\n    // dispatch({ type: ActionType.SAVE_CELLS });\n    const { data, order } = getState().cells;\n    const cells = order.map((id) => data[id]);\n\n    try {\n      await axios.post('/cells', { cells });\n    } catch (err) {\n      if (err instanceof Error) {\n        dispatch({\n          type: ActionType.SAVE_CELLS_ERROR,\n          payload: err.message,\n        });\n      }\n    }\n  };\n};\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducers from './reducers';\nimport { persistMiddleware } from './middleware/persist-middleware';\nimport { ActionType } from './actions/action-types';\nimport { Cell } from './cell';\n\nexport const store = createStore(\n  reducers,\n  {},\n  applyMiddleware(persistMiddleware, thunk)\n);\n\nif (process.env.REACT_APP_DEMO) {\n  fetch('demo.json', {\n    headers: {\n      'Content-Type': 'application/json',\n    },\n  })\n    .then((res) => res.json())\n    .then((data) => {\n      const { demo } = data;\n      demo.reverse().forEach((cell: Cell) => {\n        const { id, type, content } = cell;\n        store.dispatch({\n          type: ActionType.INSERT_CELL_AFTER,\n          payload: {\n            id,\n            type,\n            content,\n          },\n        });\n      });\n    });\n}\n","import { Dispatch } from 'redux';\nimport { Action, ActionType } from '../actions/action-types';\nimport { saveCells } from '../actions';\nimport { RootState } from '../reducers';\n\n// export const persistMiddleware = (store) => {}\n\nexport const persistMiddleware = ({\n  dispatch,\n  getState,\n}: {\n  dispatch: Dispatch<Action>;\n  getState: () => RootState;\n}) => {\n  let timer: any;\n  return (next: (action: Action) => void) => {\n    return (action: Action) => {\n      next(action);\n\n      if (\n        [\n          ActionType.MOVE_CELL,\n          ActionType.UPDATE_CELL,\n          ActionType.INSERT_CELL_AFTER,\n          ActionType.DELETE_CELL,\n        ].includes(action.type)\n      ) {\n        if (timer) {\n          clearTimeout(timer);\n        }\n        timer = setTimeout(() => {\n          saveCells()(dispatch, getState);\n        }, 750);\n      }\n    };\n  };\n};\n","import { useMemo } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { actions } from '../state';\n\nexport const useActions = () => {\n  const dispatch = useDispatch();\n\n  return useMemo(() => {\n    return bindActionCreators(actions, dispatch);\n  }, [dispatch]);\n};\n","import { useActions } from '../hooks/use-actions';\nimport './action-bar.css';\n\ninterface ActionButtonProps {\n  action: React.MouseEventHandler<HTMLButtonElement>;\n  icon: string;\n}\n\nconst ActionButton = ({ action, icon }: ActionButtonProps) => {\n  return (\n    <button className=\"bu-button bu-is-primary bu-is-small\" onClick={action}>\n      <span className=\"bu-icon\">\n        <i className={icon}></i>\n      </span>\n    </button>\n  );\n};\n\ninterface ActionBarProps {\n  id: string;\n}\n\nconst ActionBar = ({ id }: ActionBarProps) => {\n  const { moveCell, deleteCell } = useActions();\n\n  return (\n    <div className=\"action-bar\">\n      <ActionButton action={() => moveCell(id, 'up')} icon=\"fas fa-arrow-up\" />\n      <ActionButton\n        action={() => moveCell(id, 'down')}\n        icon=\"fas fa-arrow-down\"\n      />\n      <ActionButton action={() => deleteCell(id)} icon=\"fas fa-times\" />\n    </div>\n  );\n};\n\nexport default ActionBar;\n","import { useRef } from 'react';\nimport MonacoEditor, { EditorDidMount } from '@monaco-editor/react';\nimport prettier from 'prettier';\nimport parser from 'prettier/parser-babel';\nimport codeShift from 'jscodeshift';\nimport Highlighter from 'monaco-jsx-highlighter';\nimport './code-editor.css';\n// import './syntax.css'; // use light theme\n\ninterface CodeEditorProps {\n  initialValue: string;\n  onChange(value: string): void;\n  onExecuteBundle: React.MouseEventHandler<HTMLButtonElement>;\n}\n\nconst CodeEditor = ({\n  initialValue,\n  onChange,\n  onExecuteBundle,\n}: CodeEditorProps) => {\n  const editorRef = useRef<any>();\n\n  const handleEditorDidMount: EditorDidMount = (getValue, monacoEditor) => {\n    editorRef.current = monacoEditor;\n\n    monacoEditor.onDidChangeModelContent(() => {\n      onChange(getValue());\n    });\n\n    monacoEditor.getModel()?.updateOptions({ tabSize: 2 });\n\n    // @ts-ignore\n    const highlighter = new Highlighter(window.monaco, codeShift, monacoEditor);\n    highlighter.highLightOnDidChangeModelContent(\n      () => {},\n      () => {},\n      undefined,\n      () => {}\n    );\n  };\n\n  const handleFormat = () => {\n    // get current value from editor\n    const unformatted = editorRef.current.getModel().getValue();\n\n    // format the value\n    const formatted = prettier\n      .format(unformatted, {\n        parser: 'babel',\n        plugins: [parser],\n        useTabs: false,\n        semi: true,\n        singleQuote: true,\n      })\n      .replace(/\\n$/, '');\n\n    // set the formatted value back in the editor\n    editorRef.current.setValue(formatted);\n  };\n\n  return (\n    <div className=\"editor-wrapper\">\n      <div className=\"button-wrapper\">\n        <button\n          className=\"bu-button button-format bu-is-primary bu-is-small\"\n          onClick={handleFormat}\n        >\n          Format\n        </button>\n        <button\n          className=\"bu-button button-play bu-is-primary bu-is-small\"\n          onClick={onExecuteBundle}\n        >\n          <span className=\"bu-icon\">\n            <i className=\"fas fa-play\" />\n          </span>\n        </button>\n      </div>\n      <MonacoEditor\n        editorDidMount={handleEditorDidMount}\n        value={initialValue}\n        // theme=\"dark\" // use light theme\n        language=\"javascript\"\n        height=\"100%\"\n        options={{\n          wordWrap: 'on',\n          minimap: { enabled: false },\n          showUnused: false,\n          folding: false,\n          lineNumbersMinChars: 3,\n          fontSize: 16,\n          tabSize: 2,\n          scrollBeyondLastLine: false,\n          automaticLayout: true,\n        }}\n      />\n    </div>\n  );\n};\n\nexport default CodeEditor;\n","import { useEffect, useRef } from 'react';\nimport './preview.css';\n\ninterface PreviewProps {\n  code: string;\n  error: string;\n}\n\nconst html = `\n  <html>\n    <head>\n      <style>html { background-color: white; }</style>\n    </head>\n    <body>\n      <div id=\"root\"></div>\n      <div id=\"portal\"></div>\n      <script>\n        const handleError = (err) => {\n          const root = document.querySelector('#root');\n          root.innerHTML = '<div style=\"color: red;\"><h4>Runtime Error</h4>' + err + '</div>';\n          console.error(err);\n        };\n\n        window.addEventListener('error', (event) => {\n          event.preventDefault();\n          handleError(event.error);\n        });\n\n        window.addEventListener('message', (event) => {\n          try {\n            const code = event.data;\n            eval(code);\n          } catch (err) {\n            handleError(err);\n          }\n        }, false);\n      </script>\n    </body>\n  </html>\n`;\n\nconst Preview = ({ code, error }: PreviewProps) => {\n  const iframeRef = useRef<any>();\n\n  useEffect(() => {\n    iframeRef.current.srcdoc = html;\n    setTimeout(() => {\n      iframeRef.current.contentWindow.postMessage(code, '*');\n    }, 50);\n  }, [code]);\n\n  return (\n    <div className=\"preview-wrapper\">\n      <iframe\n        title=\"preview\"\n        ref={iframeRef}\n        sandbox=\"allow-scripts\"\n        srcDoc={html}\n      />\n      {error && <div className=\"preview-error\">{error}</div>}\n    </div>\n  );\n};\n\nexport default Preview;\n","import { ReactNode, useEffect, useState } from 'react';\nimport { ResizableBox, ResizableBoxProps } from 'react-resizable';\nimport './resizable.css';\n\ninterface ResizableProps {\n  direction: 'horizontal' | 'vertical';\n  children?: ReactNode;\n}\n\nconst Resizable = ({ direction, children }: ResizableProps) => {\n  let props: ResizableBoxProps;\n\n  const [innerHeight, setInnerHeight] = useState(window.innerHeight);\n  const [innerWidth, setInnerWidth] = useState(window.innerWidth);\n  const [width, setWidth] = useState(window.innerWidth * 0.65);\n\n  useEffect(() => {\n    let timer: NodeJS.Timeout;\n    const listener = () => {\n      if (timer) {\n        clearTimeout(timer);\n      }\n\n      timer = setTimeout(() => {\n        setInnerHeight(window.innerHeight);\n        setInnerWidth(window.innerWidth);\n        if (width > window.innerWidth * 0.75) {\n          // if bigger than max width\n          setWidth(window.innerWidth * 0.75);\n        }\n      }, 100);\n    };\n    window.addEventListener('resize', listener);\n\n    return () => {\n      window.removeEventListener('resize', listener);\n    };\n  }, [width]);\n\n  if (direction === 'horizontal') {\n    props = {\n      className: 'resize-horizontal',\n      minConstraints: [innerWidth * 0.2, Infinity], //h, v\n      maxConstraints: [innerWidth * 0.75, Infinity],\n      height: Infinity,\n      width,\n      resizeHandles: ['e'],\n      onResizeStop: (event, data) => {\n        setWidth(data.size.width);\n      },\n    };\n  } else {\n    // vertical\n    props = {\n      minConstraints: [Infinity, 24],\n      maxConstraints: [Infinity, innerHeight * 0.9],\n      height: 300,\n      width: Infinity,\n      resizeHandles: ['s'],\n    };\n  }\n\n  return <ResizableBox {...props}>{children}</ResizableBox>;\n};\n\nexport default Resizable;\n","import { useEffect } from 'react';\nimport CodeEditor from './code-editor';\nimport Preview from './preview';\nimport Resizable from './resizable';\nimport { Cell } from '../state';\nimport { useActions } from '../hooks/use-actions';\nimport { useTypedSelector } from '../hooks/use-typed-selector';\nimport { useCumulativeCode } from '../hooks/use-cumulative-code';\nimport './code-cell.css';\n\ninterface CodeCellProps {\n  cell: Cell;\n}\n\nconst CodeCell = ({ cell }: CodeCellProps) => {\n  const { updateCell, createBundle } = useActions();\n  const bundle = useTypedSelector((state) => state.bundles[cell.id]);\n  const cumulativeCode = useCumulativeCode(cell.id);\n\n  useEffect(() => {\n    if (!bundle) {\n      createBundle(cell.id, cumulativeCode);\n      return;\n    }\n\n    // const service = await esbuild.startService({....});\n    // const result = await service.transform(cell.content, {\n    //   loader: 'jsx',\n    //   target: 'es2015',\n    // });\n\n    const timer = setTimeout(async () => {\n      createBundle(cell.id, cumulativeCode);\n    }, 1000);\n\n    return () => {\n      clearTimeout(timer);\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [cumulativeCode, cell.id, createBundle]);\n\n  return (\n    <Resizable direction=\"vertical\">\n      <div\n        style={{\n          display: 'flex',\n          flexDirection: 'row',\n          height: 'calc(100% - 10px)',\n        }}\n      >\n        <Resizable direction=\"horizontal\">\n          <CodeEditor\n            initialValue={cell.content}\n            onChange={(value) => updateCell(cell.id, value)}\n            onExecuteBundle={() => createBundle(cell.id, cumulativeCode)}\n          />\n        </Resizable>\n        <div className=\"progress-wrapper\">\n          {!bundle || bundle.loading ? (\n            <div className=\"progress-cover\">\n              <progress\n                className=\"bu-progress bu-is-small bu-is-primary\"\n                max=\"100\"\n              >\n                Loading\n              </progress>\n            </div>\n          ) : (\n            <Preview code={bundle.code} error={bundle.error} />\n          )}\n        </div>\n      </div>\n    </Resizable>\n  );\n};\n\nexport default CodeCell;\n","import { useTypedSelector } from './use-typed-selector';\n\nexport const useCumulativeCode = (cellId: string) => {\n  return useTypedSelector((state) => {\n    const { data, order } = state.cells;\n    const cells = order.map((id) => data[id]);\n\n    const printer = `\n      import _React from 'react';\n      import _ReactDOM from 'react-dom';\n      var print = (value, end) => {\n        const root = document.querySelector('#root');\n        const portalRoot = document.querySelector('#portal');\n        \n        if (typeof value === 'object') {\n          if (value.$$typeof && value.props) {\n            const temp = document.createElement('div');\n            const portal = _ReactDOM.createPortal(value, root);\n            _ReactDOM.render(portal, temp, () => portalRoot.appendChild(temp));\n            if (end !== undefined && end !== null) root.append(end);\n          } else {\n            root.append(JSON.stringify(value));\n            if (end !== undefined && end !== null) root.append(end);\n            else root.append(document.createElement('br'));\n          }\n        } else {\n          root.append(value);\n          if (end !== undefined && end !== null) root.append(end);\n          else root.append(document.createElement('br'));\n      }\n      }\n    `;\n\n    const printerNoOp = `var print = () => {}`;\n\n    const cumulativeCode = [];\n    for (let c of cells) {\n      if (c.type === 'code') {\n        if (c.id === cellId) {\n          cumulativeCode.push(printer);\n        } else {\n          cumulativeCode.push(printerNoOp);\n        }\n        cumulativeCode.push(c.content);\n      }\n      if (c.id === cellId) {\n        break;\n      }\n    }\n    return cumulativeCode;\n  }).join('\\n');\n};\n","import MDEditor from '@uiw/react-md-editor';\nimport { useEffect, useRef, useState } from 'react';\nimport { Cell } from '../state';\nimport { useActions } from '../hooks/use-actions';\nimport './text-editor.css';\n\ninterface TextEditorProps {\n  cell: Cell;\n}\n\nconst TextEditor = ({ cell }: TextEditorProps) => {\n  const { updateCell } = useActions();\n\n  const ref = useRef<HTMLDivElement | null>(null);\n  const [editing, setEditing] = useState(false);\n\n  useEffect(() => {\n    const listener = (event: MouseEvent) => {\n      if (\n        ref.current &&\n        event.target &&\n        ref.current.contains(event.target as Node)\n      ) {\n        return;\n      }\n      setEditing(false);\n    };\n\n    window.addEventListener('click', listener, { capture: true });\n\n    return () => {\n      window.removeEventListener('click', listener, { capture: true });\n    };\n  }, []);\n\n  if (editing) {\n    return (\n      <>\n        <div data-color-mode=\"light\" className=\"text-editor\" ref={ref}>\n          <MDEditor\n            value={cell.content}\n            onChange={(value) => updateCell(cell.id, value || '')}\n          />\n        </div>\n        <div className=\"save-bar\">\n          <button className=\"bu-button bu-is-primary bu-is-small\">\n            <i className=\"fas fa-check\" />\n          </button>\n        </div>\n      </>\n    );\n  }\n\n  return (\n    <div\n      data-color-mode=\"light\"\n      className=\"text-editor bu-card\"\n      onClick={() => setEditing(true)}\n    >\n      <div className=\"bu-card-content\">\n        <MDEditor.Markdown source={cell.content || 'Click to edit'} />\n      </div>\n    </div>\n  );\n};\n\nexport default TextEditor;\n","import { Cell } from '../state';\nimport ActionBar from './action-bar';\nimport CodeCell from './code-cell';\nimport TextEditor from './text-editor';\nimport './cell-list-item.css';\n\ninterface CellListItemProps {\n  cell: Cell;\n  focused: boolean;\n}\n\nconst CellListItem = ({ cell, focused }: CellListItemProps) => {\n  const { id, type } = cell;\n  let child: JSX.Element;\n\n  if (type === 'code') {\n    child = (\n      <>\n        <div className=\"action-bar-wrapper\">\n          <ActionBar id={id} />\n        </div>\n        <CodeCell cell={cell} />\n      </>\n    );\n  } else {\n    child = (\n      <>\n        <TextEditor cell={cell} />\n        <ActionBar id={id} />\n      </>\n    );\n  }\n  return (\n    <div className={`cell-list-item ${focused && 'focused'}`}>{child}</div>\n  );\n};\n\nexport default CellListItem;\n","import { useActions } from '../hooks/use-actions';\nimport './add-cell.css';\n\ninterface AddButtonProps {\n  action: React.MouseEventHandler<HTMLButtonElement>;\n  label: string;\n}\n\nconst AddButton = ({ action, label }: AddButtonProps) => {\n  return (\n    <button\n      className=\"bu-button bu-is-rounded bu-is-primary bu-is-small\"\n      onClick={action}\n    >\n      <span className=\"bu-icon bu-is-small\">\n        <i className=\"fas fa-plus\"></i>\n      </span>\n      <span>{label}</span>\n    </button>\n  );\n};\n\ninterface AddCellProps {\n  previousCellId: string | null;\n  forceVisible?: boolean;\n}\n\nconst AddCell = ({ forceVisible, previousCellId }: AddCellProps) => {\n  const { insertCellAfter } = useActions();\n\n  return (\n    <div className={`add-cell ${forceVisible && 'force-visible'}`}>\n      <div className=\"add-buttons\">\n        <AddButton\n          action={() => insertCellAfter(previousCellId, 'code')}\n          label=\"Code\"\n        />\n        <AddButton\n          action={() => insertCellAfter(previousCellId, 'text')}\n          label=\"Text\"\n        />\n      </div>\n      <div className=\"divider\"></div>\n    </div>\n  );\n};\n\nexport default AddCell;\n","import { Fragment, useEffect } from 'react';\nimport { useTypedSelector } from '../hooks/use-typed-selector';\nimport { useActions } from '../hooks/use-actions';\nimport CellListItem from './cell-list-item';\nimport AddCell from './add-cell';\nimport './cell-list.css';\nimport axios from 'axios';\n\nconst CellList = () => {\n  const { fetchCells } = useActions();\n\n  const cells = useTypedSelector((state) => {\n    const { order, data } = state.cells;\n    return order.map((id) => data[id]);\n  });\n\n  const { loading, order, focusedIndex } = useTypedSelector((state) => {\n    return state.cells;\n  });\n\n  useEffect(() => {\n    document\n      .querySelector('.focused')\n      ?.scrollIntoView({ behavior: 'smooth', block: 'center' });\n  }, [order, focusedIndex]);\n\n  useEffect(() => {\n    fetchCells();\n    axios.get('/filename').then((filename) => {\n      document.title = `${filename} | JSBook | React App`;\n    });\n\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const renderedCells = cells.map((cell) => (\n    <Fragment key={cell.id}>\n      <CellListItem cell={cell} focused={cell.id === focusedIndex} />\n      <AddCell previousCellId={cell.id} />\n    </Fragment>\n  ));\n\n  return (\n    <div className=\"cell-list\">\n      <AddCell forceVisible={cells.length === 0} previousCellId={null} />\n      {cells.length === 0 && !loading ? (\n        <div className=\"bu-card empty\">\n          <div className=\"bu-card-content\">Add a new cell to get started</div>\n        </div>\n      ) : (\n        renderedCells\n      )}\n    </div>\n  );\n};\n\nexport default CellList;\n","import { createRoot } from 'react-dom/client';\nimport { Provider } from 'react-redux';\nimport CellList from './components/cell-list';\nimport { store } from './state';\n\nconst el = document.getElementById('root');\nconst root = createRoot(el!);\n\nconst App = () => {\n  return (\n    <Provider store={store}>\n      <CellList />\n    </Provider>\n  );\n};\n\nroot.render(<App />);\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 77;"],"sourceRoot":""}